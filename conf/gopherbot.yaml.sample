## This is a sample configuration file for Gopherbot.
## For a quick-n-dirty install:

## 1. Obtain a 'bot token from https://<your-team>.slack.com/services/new/bot
## 2. Copy this file to 'gopherbot.yaml' and edit, adding your slack token
## 3. Run the bot with './gopherbot' (or './gopherbot.exe' on Windows)

## For a "standard" install:
## - This file should be copied to gopherbot.yaml in the install directory, and
##   modified to include a Slack token, email credentials, and any other
##   credential or other information specific to this instance of the robot.
##   This would normally be done by a configuration managment tool such as
##   Ansible or Puppet, using information specific to the server instance (e.g.
##   dev / prod servers).
## - A copy of this file should be placed in
##   <config dir>/conf/gopherbot.yaml, specifying plugin names and paths,
##   and any configuration such as AdminUsers, AdminContact, etc. that is
##   common to dev / prod robot instances. Together with locally-developed
##   plugins in the plugins/ directory, the config directory would normally
##   be stored in a git repository.

## Note that the above are just guidelines and not hard-and-fast rules, but
## should give you an idea of how Gopherbot was designed, and why.

## The administrator of this robot, can be retrieved in plugins with
## GetBotAttribute("admin")
#AdminContact: "Joe Devops, <joe@supercooldomain.com>"

## If a plugin doesn't specify otherwise it will be active in these channels;
## defaults to no channels.
#DefaultChannels: [ "general", "random" ]

## Whether plugins are available by direct message by default if not specified;
## defaults to true.
#DefaultAllowDirect: true

## Users the bot should never listen to
#IgnoreUsers: [ "otherbot", "slackbot" ]

## Note: Bot users in Slack can't join channels; this is put here for use with
## connectors that support it, such as the 'terminal' connector.
#JoinChannels: [ "random", "general" ]

## List of users that can issue admin commands like reload, quit. Should be
## a list of user handles / nicks.
#AdminUsers: [ "alice", "bob" ]

## One-character alias the bot can be called by. Note: not all single characters
## are supported. If your robot doesn't respond to e.g. ";ping", try changing
## the Alias to something other than ";". Popular alternatives: ":", "!", "*";
## the complete list: "*+^$?\[]{}&!;:-%#@~<>/"
#Alias: ";"

## Port to listen on for http/JSON api calls, for external plugins
LocalPort: 8880

## Initial log level, one of trace, debug, info, warn, error. See 'help log'
## for help on changing the log level and viewing contents of the log.
LogLevel: info

## List of external plugins to enable; generally scripts using a gopherbot
## script library. The robot will look for plugins in the config directory
## first (if it exists), then the installation directory.
#ExternalPlugins:
## Useful and/or entertaining plugins
#- Name: weather
#  Path: plugins/weather.rb
#- Name: chuck
#  Path: plugins/chuck.rb
#- Name: hosts
#  Path: plugins/hosts.sh
#- Name: echo
## Samples that exercise portions of the API, but server little other purpose.
## Note: there are more than those listed below.
#  Path: plugins/samples/echo.sh
#- Name: whoami
#  Path: plugins/samples/whoami.sh
#- Name: psdemo
#  Path: plugins/samples/psdemo.ps1
#- Name: rubydemo
#  Path: plugins/samples/rubydemo.rb
#- Name: pythondemo
#  Path: plugins/samples/pythondemo.py

# If the plugin doesn't specify an outgoing message format, what's the default?
# This will be 'Raw' (unmodified, subject to protocol-specific formatting) if
# not set. 'Variable' will escape special characters like #, @, _, `, etc. so
# those characters can appear in replies. 'Fixed' will send everything in a
# fixed-width font.
#DefaultMessageFormat: Variable # 'Raw' if not specified

# PROTOCOL SELECTION
# Uncomment one of the stanzas below to select the 'bot 'Protocol'
# and related 'ProtocolConfig' configuration data.

# Specification of which connection protocol ('slack', 'term', or 'test';
# see 'cfg/') and any associated configuration.
# MaxMessageSplit specifies the maximum number of messages to break a message
# into when it's too long (>4000 char)
#Protocol: slack
#ProtocolConfig:
#  SlackToken: "<your_token_here>"
#  MaxMessageSplit: 2
#

# Terminal connector, mostly useful for development.
#Protocol: term
#ProtocolConfig:
#  StartChannel: general
#  StartUser: alice
#  BotName: floyd
#  BotFullName: Floyd Gopherbot
#  Channels:
#  - random
#  - general
#  - bottest
#  Users:
#  - Name: "alice"
#    Email: "alice@example.com"
#    InternalID: "u0001"
#    FullName: "Alice User"
#    FirstName: "Alice"
#    LastName: "User"
#    Phone: "(555)765-0001"
#  - Name: "bob"
#    Email: "bob@example.com"
#    InternalID: "u0002"
#    FullName: "Bob User"
#    FirstName: "Robert"
#    LastName: "User"
#    Phone: "(555)765-0002"
#  - Name: "carol"
#    Email: "@example.com"
#    InternalID: "u0003"
#    FullName: "Carol User"
#    FirstName: "Carol"
#    LastName: "User"
#    Phone: "(555)765-0003"
#  - Name: "david"
#    Email: "david@example.com"
#    InternalID: "u0004"
#    FullName: "David User"
#    FirstName: "David"
#    LastName: "User"
#    Phone: "(555)765-0004"
#  - Name: "erin"
#    Email: "erin@example.com"
#    InternalID: "u0005"
#    FullName: "Erin User"
#    FirstName: "Erin"
#    LastName: "User"
#    Phone: "(555)765-0005"

## The robot's email address (used in From:)
#Email: robbie@robot.com
## Configuration for sending out email. For Authtype: none, User and Password
## can be left out. Note that sending email will fail if Email isn't set.
#MailConfig:
#  Mailhost: <somehost:port>
#  Authtype: <plain|none>
#  User: <authuser>
#  Password: <password>

## Specify the mechanism for storing the robots memories. Currently only a
## simple file-based brain is available for long-term memories. Be sure that
## '/brain' in the config or install dir is writable by the user the robot
## runs as.
Brain: file
BrainConfig:
  BrainDirectory: brain

## Use Google Authenticator TOTP by default for elevated commands. To use:
## - Ask the robot to 'send launch codes', and it will send you (one time)
##   a string for configuring your Google Authencticator app, and store it's
##   own copy in the robot's brain. You can verify it works with the
##   'check launch code <code>' command.
## - To require a token to be provided before running a given plugin command,
##   add the elevated command(s) to the plugin's ElevatedCommands list, or to
##   ElevateImmediateCommands for commands that require elevation every time
##   regardless of timeout.
## - Configure the elevator by overriding the config for the plugin in
##   'conf/plugins/totp.yaml'
#DefaultElevator: totp
