# AdminContact: "Joe Admin, <joe@my.org>"

## Configure the robot connection protocol; modifying this could
## break `gopherbot -t`
{{ $proto := env "GOPHER_PROTOCOL" | default "terminal" }}
Protocol: {{ $proto }}

DefaultChannels: [ "general", "random" ]
## Protocol-specific configuration
{{ if eq $proto "slack" }}
{{ .Include "slack.yaml" }}
{{ end }}

{{ if eq $proto "terminal" }}
{{ .Include "terminal.yaml" }}
{{ end }}

{{ $botname := env "GOPHER_BOTNAME" | default "<botname>" }}
{{ $botemail := env "GOPHER_BOTMAIL" | default "<botemail>" }}
{{ $botfullname := env "GOPHER_BOTFULLNAME" | default "<botfullname>" }}
{{ $botalias := env "GOPHER_ALIAS" | default "<botalias>" }}

BotInfo:
  UserName: {{ $botname }}
  Email: {{ $botemail }}
  FullName: {{ $botfullname }}
  FirstName: {{ $botname }}
  LastName: Gopherbot

Alias: '{{ $botalias }}'

# Brain configuration; this can all be replaced with static configuration
# and encrypted secrets for most robots.
{{ $brain := env "GOPHER_BRAIN" | default "file" }}
{{ $statedir := env "GOPHER_STATEDIR" | default "state" }}
{{ $defbraindir := printf "%s/brain" $statedir }}
Brain: {{ $brain }}
#EncryptBrain: true # default
{{ if eq $brain "file" }}
BrainConfig:
  BrainDirectory: {{ env "GOPHER_BRAIN_DIRECTORY" | default $defbraindir }}
  Encode: true
{{ else if eq $brain "dynamo" }}
BrainConfig:
  TableName: "your table name here"
  Region: {{ env "GOPHER_BRAIN_REGION" | default "us-east-1" }}
  AccessKeyID: "replace with encrypted value"
  SecretAccessKey: "replace with encrypted value"
{{ end }}
# End brain config

# Defaults for history and workspace directories, relative to the
# process working directory.
{{ $histdir := env "GOPHER_HISTORYDIR" | default "history" }}
{{ $workdir := env "GOPHER_WORKSPACE" | default "workspace" }}
{{ if $workdir -}} WorkSpace: {{ $workdir }} {{- end }}

## Configure a history provider
{{ $history := env "GOPHER_HISTORY_PROVIDER" | default "file" }}
HistoryProvider: {{ $history }}

{{ if eq $history "file" }}
HistoryConfig:
  Directory: {{ $histdir }}
  #URLPrefix: 'http://localhost:9000'
{{ end }}
## End history config

## If the plugin doesn't specify an outgoing message format, what's the default?
## This will be 'Raw' (unmodified, subject to protocol-specific formatting) if
## not set. 'Variable' will escape special characters like #, @, _, `, etc. so
## those characters can appear in replies. 'Fixed' will send everything in a
## fixed-width font.
# DefaultMessageFormat: Variable # 'Raw' if not specified

ExternalJobs:
  ## Using a dedicated read-write deploy key dramatically simplifies initial
  ## setup. You can remove these override parameters to use the robot's
  ## default "robot_rsa", or use another key of your choice.
  "updatecfg":
    Parameters:
    - Name: "KEYNAME"
      Value: "manage_rsa"
  "save":
    Parameters:
    - Name: "KEYNAME"
      Value: "manage_rsa"
  "backup":
    Parameters:
    - Name: "KEYNAME"
      Value: "manage_rsa"
  "restore":
    Parameters:
    - Name: "KEYNAME"
      Value: "manage_rsa"
#   "hello":
#     Description: Trivial hello world job for testing
#     Path: jobs/hello.sh
#     Privileged: true
#     Parameters:
#     - Name: NONCE
#       Value: "No way, Jack!"

## Most often you don't want your robot to run scheduled jobs
## with the "terminal" connector, normally used for testing and
## development.
{{ if ne $proto "terminal" }}
## Job scheduling with github.com/robfig/cron; includes seconds
# ScheduledJobs:
## Once your robot has successfully saved it's configuration to
## $GOPHER_CUSTOM_REPOSITORY, enable the backup job to save long-term
## memories to the "robot-state" branch.
# - Name: backup
#   Schedule: "@every 1m"
## If your robot is logging to a file, this job will rotate logs
# - Name: logrotate
#   Schedule: "5 0 0 * * *"
# - Name: hello
#   Schedule: "@every 30s" # see: https://godoc.org/github.com/robfig/cron
#   Arguments: # an array of strings; up to the job to parse numbers & bools
#   - "Hello, World !!!"
# - Name: hello
#   Schedule: "@every 35s" # see: https://godoc.org/github.com/robfig/cron
#   Arguments: # an array of strings; up to the job to parse numbers & bools
#   - "Goodbye, World !!!"
{{ end }}

## After adding an initial administrator, you should disable the setup
## plugin by uncommenting the next three lines.
ExternalPlugins:
{{ if env "GOPHER_SETUP_TOKEN" }}
  "addadmin":
    Description: Setup plugin allowing an initial administrator to be added
    Path: plugins/addadmin.sh
    Privileged: true
    Homed: true
    Parameters:
    - Name: GOPHER_SETUP_TOKEN
      Value: {{ env "GOPHER_SETUP_TOKEN" }}
{{ end }}
#   "weather":
#     Description: A plugin that uses OpenWeatherMap to report the weather
#     Path: plugins/weather.rb
#     Parameters:
#     - Name: OWM_APIKEY
#       Value: replace with encrypted string
#     - Name: TEMP_UNITS
#       Value: {{ env "GOPHER_OWM_UNITS" | default "imperial" }} # or 'metric'
#     - Name: DEFAULT_COUNTRY
#       Value: {{ env "GOPHER_OWM_COUNTRY" | default "us" }} # or other ISO 3166 country code
#   "chuck":
#     Description: A plugin that pipes up whenever The Man's name is mentioned
#     Path: plugins/chuck.rb
#   "echo":
#     Description: Trivial bash plugin
#     Path: plugins/echo.sh
#   "pythondemo":
#     Description: Sample python plugin
#     Path: plugins/samples/pythondemo.py

## Note that modules for connectors, brains and history providers load automatically
# LoadableModules:
#   "knock":
#     Description: Knock knock jokes!
#     Path: goplugins/knock.so
#   "memes":
#     Description: Memes!
#     Path: goplugins/meme.so

NameSpaces:
  "ssh":
    Parameters:
    - Name: BOT_SSH_PHRASE
      Value: {{ decrypt "<sshencrypted>" }}
    
DefaultMessageFormat: Raw
# Users the bot should never listen to
#IgnoreUsers: [ "otherbot", "slackbot" ]

## Configuration for sending out email. For Authtype: none, User and Password
## can be left out. Note that sending email will fail if Email isn't set. Note
## for GMail users - for your robot to send email, you'll need to enable less
## secure apps for the sending account. See:
## https://support.google.com/accounts/answer/6010255

# MailConfig:
#   Mailhost: smtp.gmail.com:587
#   Authtype: plain
#   User: clu@linuxjedi.org
#   Password: replace with encrypted string

## Use Google Authenticator TOTP by default for elevated commands. To use:
## - Ask the robot to 'send launch codes', and it will send you (one time)
##   a string for configuring your Google Authencticator app, and store it's
##   own copy in the robot's brain. You can verify it works with the
##   'check launch code <code>' command.
## - To require a token to be provided before running a given plugin command,
##   add the elevated command(s) to the plugin's ElevatedCommands list, or to
##   ElevateImmediateCommands for commands that require elevation every time
##   regardless of timeout.
## - Configure the elevator by overriding the config for the plugin in
##   'conf/plugins/totp.yaml'

# DefaultElevator: totp
